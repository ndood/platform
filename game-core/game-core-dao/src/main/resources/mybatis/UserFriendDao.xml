<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fulu.game.core.dao.UserFriendDao">
    <resultMap id="FriendResultMap" type="com.fulu.game.core.entity.UserFriend">
        <id column="id"  property="id" />
        <result column="from_user_id"  property="fromUserId" />
        <result column="to_user_id"  property="toUserId" />
        <result column="is_attention"  property="isAttention" />
        <result column="is_black"  property="isBlack" />
        <result column="create_time"  property="createTime" />
        <result column="update_time"  property="updateTime" />
        <result column="status"  property="status" />
    </resultMap>

    <resultMap id="FriendResultVOMap" type="com.fulu.game.core.entity.vo.UserFriendVO" extends="FriendResultMap">
        <result column="head_portraits_url" property="headPortraitsUrl"/>
        <result column="nickname" property="nickname"/>
        <result column="gender" property="gender"/>
        <result column="im_id" property="imId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,from_user_id,to_user_id,ifnull(is_attention,0) as is_attention, ifnull(is_black,0) as is_black, create_time,update_time,status    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="FriendResultMap">
        select
        <include refid="Base_Column_List" />
        from t_user_friend
        <where>
        id = #{id}
        </where>
    </select>

    <select id="findAll"  resultMap="FriendResultMap">
        select
        <include refid="Base_Column_List" />
        from t_user_friend
    </select>

    <select id="findByFromAndToUserId" resultMap="FriendResultMap" parameterType="com.fulu.game.core.entity.vo.AdminVO">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user_friend
        <where>
            <if test="fromUserId != null">
                and from_user_id = #{fromUserId}
            </if>
            <if test="toUserId != null">
                and to_user_id = #{toUserId}
            </if>
        </where>
        limit 1
    </select>

    <select id="findByParameter" resultMap="FriendResultVOMap" parameterType="com.fulu.game.core.entity.vo.AdminVO">
        SELECT friend.id,
        friend.from_user_id,
        friend.to_user_id,
        ifnull(friend.is_attention,0) as is_attention,
        ifnull(friend.is_black,0) as is_black,
        friend.create_time,
        friend.update_time,
        friend.status,
        tuser.head_portraits_url,
        tuser.nickname,
        tuser.gender,
        tuser.im_id
        from t_user_friend friend
        left join t_user tuser
        <choose>
            <when test="type != null and type == 1">
                on friend.to_user_id = tuser.id
            </when>
            <otherwise>
                on friend.from_user_id = tuser.id
            </otherwise>
        </choose>
        <where>
            <if test="fromUserId != null">
                and friend.from_user_id = #{fromUserId}
            </if>
            <if test="toUserId != null">
                and friend.to_user_id = #{toUserId}
            </if>
            <if test="isAttention != null">
                and friend.is_attention = #{isAttention}
            </if>
            <if test="isBlack != null">
                and ifnull(friend.is_black,0) = #{isBlack}
            </if>
        </where>
    </select>

    <select id="searchFriends" resultMap="FriendResultVOMap" parameterType="com.fulu.game.core.entity.vo.UserFriendVO">
        SELECT DISTINCT
        tuser.id,
        tuser.id as userId,
        tuser.head_portraits_url,
        tuser.nickname,
        tuser.gender,
        tuser.im_id
        from t_user_friend friend
        left join t_user tuser
        on (friend.to_user_id = tuser.id or friend.from_user_id = tuser.id)
        where (friend.from_user_id = #{userId} or friend.to_user_id = #{userId}) and
        friend.is_attention = 1  and
        <!-- and isBlack = 0 and  -->
        (tuser.id = #{nickname} or tuser.nickname like CONCAT('%', #{nickname},'%'))
    </select>

    <select id="searchUsers" resultMap="FriendResultVOMap" parameterType="com.fulu.game.core.entity.vo.UserFriendVO">
        SELECT DISTINCT
            tuser.id,
            tuser.id as userId,
            tuser.head_portraits_url,
            tuser.nickname,
            tuser.gender,
            tuser.im_id,
            IFNULL(friend.is_attention,0) as is_attention,
            IFNULL(friend.is_black,0) as is_black
        from  t_user tuser
        left join t_user_friend friend
            on tuser.id = friend.from_user_id
        where tuser.id != #{userId} and
          (tuser.id = #{nickname} or tuser.nickname like CONCAT('%', #{nickname},'%') )
    </select>

    <select id="getAllAttentionsByUserId" resultType="com.fulu.game.core.entity.UserFriend">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user_friend
        where from_user_id = #{0}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from t_user_friend
        <where>
            id = #{id}
        </where>
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.fulu.game.core.entity.vo.UserFriendVO">
        insert into
        t_user_friend (from_user_id, to_user_id, is_attention, is_black, create_time, update_time, status)
        values
        (#{fromUserId}, #{toUserId}, #{isAttention}, #{isBlack}, #{createTime}, #{updateTime}, #{status})
    </insert>

    <update id="update" parameterType="com.fulu.game.core.entity.vo.UserFriendVO">
        update t_user_friend
        <set>
            <if test="fromUserId != null">
                from_user_id = #{fromUserId},
            </if>

            <if test="toUserId != null">
                to_user_id = #{toUserId},
            </if>
            <if test="isAttention != null">
                is_attention = #{isAttention},
            </if>
            <if test="isBlack != null">
                is_black = #{isBlack},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
</mapper>